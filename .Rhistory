Food_pattern <- Food_pattern[-c(1,2), ]
# Définir la première ligne valide comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[1, ]
View(Food_pattern)
Food_pattern <- Food_pattern[-c(1:4), ]  # Suppression des lignes d'e
View(Food_pattern)
# Convertir les colonnes en numériques
df$Year <- as.numeric(df$Year)
View(Food_pattern)
View(Food_pattern)
Food_pattern<-Food_pattern%>%
rename(
Meat,eggs and nuts (ounces) = `Meat,eggs and nuts`
Food_pattern<-Food_pattern%>%
rename(
Meat,eggs and nuts (ounces) = `Meat,eggs and nuts`
Food_pattern<-Food_pattern%>%
rename(
Meat,eggs and nuts ounces = `Meat,eggs and nuts`
Food_pattern<-Food_pattern%>%
rename(
Meat,eggs, nuts ounces = `Meat,eggs and nuts`
Food_pattern<-Food_pattern%>%
rename(
Meat, eggs, nuts ounces = `Meat,eggs and nuts`
names(Food_pattern)[names(Food_pattern) == "Meat,eggs and nuts"] <- "Meat,eggs and nuts, ounces"
View(Food_pattern)
names(Food_pattern)[names(Food_pattern) == "Meat,eggs and nuts"] <- "Meat,eggs and nuts, ounces"
View(Food_pattern)
Food_pattern<-Food_pattern%>%
names(Food_pattern)[names(Food_pattern) == "Meat,eggs and nuts"] <- "Meat,eggs and nuts, ounces"
library(tidyverse)
Food_pattern<-Food_pattern%>%
names(Food_pattern)[names(Food_pattern) == "Meat,eggs and nuts"] <- "Meat,eggs and nuts, ounces"
names(Food_pattern)[names(Food_pattern) == "Meat,eggs and nuts"] <- "Meat,eggs and nuts, ounces"
View(Food_pattern)
ggplot(Food_pattern, aes(x = Year, y = `Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 1) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y = `Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 1) +  # Ligne rouge
geom_line(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y = `Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 1) +  # Ligne rouge
geom_line(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y = `Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 1) +  # Ligne rouge
geom_line(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y = Meat, eggs, and nuts)) +
ggplot(Food_pattern, aes(x = Year, y =`Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 1) +  # Ligne rouge
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y =`Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 1) +  # Ligne rouge
geom_line(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y =`Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 1) +  # Ligne rouge
geom_line(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y =`Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 1) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y =`Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 1) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y =`Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 3) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x = Year, y =`Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =`Meat, eggs, and nuts`, y =Year)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =`Meat, eggs, and nuts`, y =Year)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =`Meat, eggs, and nuts`, y =Year)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =`Meat, eggs, and nuts`, y =Year)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =`Meat, eggs, and nuts`, y =Year)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =Year, y = `Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =Year, y = `Added fats and oils and dairy fats`)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =Year, y = `Meat, eggs, and nuts`)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =Year, y = `Added fats and oils and dairy fats`)) +
geom_line(color = "red", size = 2) +  # Ligne rouge
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =Year, y = `Added fats and oils and dairy fats`)) +
geom_line(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =Year, y = `Added fats and oils and dairy fats`)) +
geom_line(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
Food_pattern <- Food_pattern[-c(1:5), ]  # Suppression des lignes d'en-tête inutiles
# Convertir les colonnes en numériques
df$Year <- as.numeric(df$Year)
View(Food_pattern)
ggplot(Food_pattern, aes(x =Year, y = `Added fats and oils and dairy fats`)) +
geom_line(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
Food_pattern<-Food_pattern[-c(45:66), ]
View(Food_pattern)
ggplot(Food_pattern, aes(x =Year, y = `Added fats and oils and dairy fats`)) +
geom_line(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (Ounces)") +
theme_minimal()
ggplot(Food_pattern, aes(x =Year, y = `Added fats and oils and dairy fats`)) +
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (gm)") +
theme_minimal()
ggplot(Food_pattern, aes(x =Year, y = `Added sugars`)) +
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de viande, œufs et noix",
x = "Année",
y = "Consommation (gm)") +
theme_minimal()
View(Fastfood_2022)
library(readr)
library(dplyr)
library(tidyverse)
# Lire le fichier (remplace "data.csv" par ton fichier)
Food_pattern<- read_csv("servings.csv", col_names = FALSE)
# Définir la deuxième ligne comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[2, ]
# Supprimer les deux premières lignes devenues inutiles
Food_pattern <- Food_pattern[-c(1,2), ]
# Définir la première ligne valide comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[1, ]
# Supprimer les lignes inutiles
Food_pattern <- Food_pattern[-c(1:5), ]  # Suppression des lignes d'en-tête inutiles
Food_pattern<-Food_pattern[-c(45:66), ]
# Convertir les colonnes en numériques
df$Year <- as.numeric(df$Year)
ggplot(Race, aes(x = `Race/Ethnicity`, y = `X2023`)) +
geom_bar(stat = "identity", color = "black", fill = "skyblue") +  # Ajout de fill et stat="identity"
labs(title = "Évolution de la consommation de sucre",
x = "Race/Ethnicity",
y = "Pourcentage de la population diabétique") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Race<- Obésité[ -c(20:29), ]
Race<-Race [-c(1:13),]
ggplot(Race, aes(x = `Race/Ethnicity`, y = `X2023`)) +
geom_bar(stat = "identity", color = "black", fill = "skyblue") +  # Ajout de fill et stat="identity"
labs(title = "Évolution de la consommation de sucre",
x = "Race/Ethnicity",
y = "Pourcentage de la population diabétique") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Race<- Obésité[ -c(20:29), ]
library(readr)
library(dplyr)
library(tidyverse)
# Lire le fichier (remplace "data.csv" par ton fichier)
Food_pattern<- read_csv("servings.csv", col_names = FALSE)
# Définir la deuxième ligne comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[2, ]
# Supprimer les deux premières lignes devenues inutiles
Food_pattern <- Food_pattern[-c(1,2), ]
# Définir la première ligne valide comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[1, ]
# Supprimer les lignes inutiles
Food_pattern <- Food_pattern[-c(1:5), ]  # Suppression des lignes d'en-tête inutiles
Food_pattern<-Food_pattern[-c(45:66), ]
# Convertir les colonnes en numériques
df$Year <- as.numeric(df$Year)
Race<- Obésité[ -c(20:29), ]
Race<- Obésité[ -c(20:29), ]
getwd()
library(tidyverse)
library(ggplot2)
Consomation<-read.csv("nominal_expenditures.csv")
Population<-read.csv("pop.csv")
Food_pattern<-read.csv("servings.csv") #ce que mange les gens en quatité dans le temps
sucre<-read.csv("sugar.csv")
food_mondialisation<-read.csv("ctcsp.csv")
X<-read.csv("2016-Eating-and-Health-Module-Tables/Table1_2016.csv")
Fastfood_2023<-read.csv("fastfood_2023.csv")
Fastfood_2022<-read.csv("fastfood_2022.csv")
Fastfood_2006<-read.csv("2016-Eating-and-Health-Module-Tables/Table4_2006.csv")
Race<- Obésité[ -c(20:29), ]
Obésité<-read.csv("2023-Obesity-by-demographic.csv")
# Supprimer les deux premières lignes devenues inutiles
Race<- Obésité[ -c(20:29), ]
Race<-Race [-c(1:13),]
names(Race)[1] <- "Race/Ethnicity"
names(Race)[2] <- "2023"
ggplot(Race, aes(x =`Race/Ethnicity`, y = `X2023`)) +
geom_bar(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de sucre",
x = "Race/Ethnicity",
y = "Pourcentage de la population diabétique") +
theme_minimal()
ggplot(Race, aes(x = `Race/Ethnicity`, y = `X2023`)) +
geom_bar(stat = "identity", color = "black", fill = "skyblue") +  # Ajout de fill et stat="identity"
labs(title = "Évolution de la consommation de sucre",
x = "Race/Ethnicity",
y = "Pourcentage de la population diabétique") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Race, aes(x = `Race/Ethnicity`, y = `2023`)) +
geom_bar(stat = "identity", color = "black", fill = "skyblue") +  # Ajout de fill et stat="identity"
labs(title = "Évolution de la consommation de sucre",
x = "Race/Ethnicity",
y = "Pourcentage de la population diabétique") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
obésité2<-read.csv("Data que obésité usa .csv")
obésité2<-read.csv("Dataobésité.csv")
obésité2<-read.csv("Dataobésité.csv")
obésité2<-read.csv("Dataobésité.csv")
obésité2<-read.csv("Data.csv")
View(obésité2)
ggplot(Race, aes(x = `Race/Ethnicity`, y = `2023`)) +
geom_bar(stat = "identity", color = "black", fill = "skyblue") +  # Ajout de fill et stat="identity"
labs(title = "Évolution de la consommation de sucre",
x = "Race/Ethnicity",
y = "Pourcentage de la population diabétique") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(readr)
library(dplyr)
library(tidyverse)
# Lire le fichier (remplace "data.csv" par ton fichier)
Food_pattern<- read_csv("servings.csv", col_names = FALSE)
# Définir la deuxième ligne comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[2, ]
# Supprimer les deux premières lignes devenues inutiles
Food_pattern <- Food_pattern[-c(1,2), ]
# Définir la première ligne valide comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[1, ]
# Supprimer les lignes inutiles
Food_pattern <- Food_pattern[-c(1:5), ]  # Suppression des lignes d'en-tête inutiles
Food_pattern<-Food_pattern[-c(45:66), ]
# Convertir les colonnes en numériques
df$Year <- as.numeric(df$Year)
ggplot(Race, aes(x = `Race/Ethnicity`, y = `2023`)) +
geom_bar(stat = "identity", color = "black", fill = "skyblue") +  # Ajout de fill et stat="identity"
labs(title = "Évolution de la consommation de sucre",
x = "Race/Ethnicity",
y = "Pourcentage de la population diabétique") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
obesite<- obésité2(A = 4:6)
obisite <- obésité2[, -c(4:6)]  # Supprime la 2ème colonne
obesite <- obésité2[, -c(4:6)]  # Supprime la 2ème colonne
View(obesite)
getwd()
library(tidyverse)
library(ggplot2)
Consomation<-read.csv("nominal_expenditures.csv")
Population<-read.csv("pop.csv")
Food_pattern<-read.csv("servings.csv") #ce que mange les gens en quatité dans le temps
sucre<-read.csv("sugar.csv")
food_mondialisation<-read.csv("ctcsp.csv")
X<-read.csv("2016-Eating-and-Health-Module-Tables/Table1_2016.csv")
Fastfood_2023<-read.csv("fastfood_2023.csv")
Fastfood_2022<-read.csv("fastfood_2022.csv")
Fastfood_2006<-read.csv("2016-Eating-and-Health-Module-Tables/Table4_2006.csv")
library(readr)
library(dplyr)
library(tidyverse)
# Lire le fichier (remplace "data.csv" par ton fichier)
Food_pattern<- read_csv("servings.csv", col_names = FALSE)
# Définir la deuxième ligne comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[2, ]
# Supprimer les deux premières lignes devenues inutiles
Food_pattern <- Food_pattern[-c(1,2), ]
# Définir la première ligne valide comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[1, ]
# Supprimer les lignes inutiles
Food_pattern <- Food_pattern[-c(1:5), ]  # Suppression des lignes d'en-tête inutiles
Food_pattern<-Food_pattern[-c(45:66), ]
# Convertir les colonnes en numériques
df$Year <- as.numeric(df$Year)
Race<- Obésité[ -c(20:29), ]
library(readr)
library(dplyr)
library(tidyverse)
# Lire le fichier (remplace "data.csv" par ton fichier)
Food_pattern<- read_csv("servings.csv", col_names = FALSE)
# Définir la deuxième ligne comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[2, ]
# Supprimer les deux premières lignes devenues inutiles
Food_pattern <- Food_pattern[-c(1,2), ]
# Définir la première ligne valide comme noms de colonnes
colnames(Food_pattern) <- Food_pattern[1, ]
# Supprimer les lignes inutiles
Food_pattern <- Food_pattern[-c(1:5), ]  # Suppression des lignes d'en-tête inutiles
Food_pattern<-Food_pattern[-c(45:66), ]
# Convertir les colonnes en numériques
df$Year <- as.numeric(df$Year)
View(Population)
Chronic_disease<-read.csv("Chronic_Disease_Indicators.csv")
Obésité<-read.csv("2023-Obesity-by-demographic.csv")
obésité2<-read.csv("Data.csv")
Race<- Obésité[ -c(20:29), ]
Race<-Race [-c(1:13),]
names(Race)[1] <- "Race/Ethnicity"
names(Race)[2] <- "2023"
ggplot(Race, aes(x =`Race/Ethnicity`, y = `X2023`)) +
geom_bar(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de sucre",
x = "Race/Ethnicity",
y = "Pourcentage de la population diabétique") +
theme_minimal()
#data base: obésité2
library(dplyr)
obesiteUS <- obésité2[,
library(dplyr)
obesiteUS <- obésité2[, -c(4:6)]
#data base: obésité2
library(dplyr)
obesite_us <- obésité2[, -c(4:6)]
View(obesite_us)
obesite_us <- obesite_us[, -c(11:24)]
View(obesite_us)
[, -c(2)]
obesite_us <- obesite_us[, -c(2)]
View(obesite_us)
Overall<-obesite_us (ID = Break_out, Nom = c("Overall"))
Overall<-obesite_us%>% filter(Break_Out == "Overall")
View(Overall)
Overall<-obesite_us%>% filter(Break_Out == "Overall", Localisationdesc = "All States and DC (median) **")
View(Overall)
Overall<-obesite_us%>% filter(Break_Out == "Overall", Localisationdesc = "All States and DC (median) **")
Overall<-obesite_us%>% filter(Break_Out == "Overall", Localisationdesc == "All States and DC (median) **")
Overall<-obesite_us%>% filter(Break_Out == "Overall", Locationdesc == "All States and DC (median) **")
View(Overall)
Overall<-obesite_us%>% filter(Break_Out == "Overall", Locationdesc == "All States and DC (median) **", Response == "Obese (BMI 30.0 - 99.8)")
View(Overall)
ggplot(obesite_us, aes(x =Year, y = `Data_value`)) +
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de sucre",
x = "Année",
y = "Consommation (gm)") +
theme_minimal()
ggplot(obesite_us, aes(x =Year, y = `Data_value`)) +
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de sucre",
x = "Année",
y = "Consommation (gm)") +
theme_minimal()
ggplot(obesite_us, aes(x =Year, y = `Data_value`)) +
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de sucre",
x = "Année",
y = "Consommation (gm)") +
theme_minimal())
ggplot(obesite_us, aes(x =Data_value, y = `Year`)) +
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de sucre",
x = "Année",
y = "porcentage d'obèse") +
theme_minimal()
ggplot(obesite_us, aes(x = `Data_value`, y = `Year`)) +
geom_bar(stat = "identity", color = "black", fill = "skyblue") +  # Ajout de fill et stat="identity"
labs(title = "Évolution de la consommation de sucre",
x = "Race/Ethnicity",
y = "Pourcentage de la population diabétique") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(obesite_us, aes(x = Year, y = Data_value)) +
geom_line(color = "blue", size = 1) +   # Ligne bleue
geom_point(color = "red", size = 2) +   # Points rouges sur les années
labs(title = "Évolution du taux d'obésité",
x = "Année",
y = "Pourcentage d'obésité") +
theme_minimal()  # Style épuré
ggplot(Overall, aes(x = Year, y = Data_value)) +
geom_line(color = "blue", size = 1) +   # Ligne bleue
geom_point(color = "red", size = 2) +   # Points rouges sur les années
labs(title = "Évolution du taux d'obésité",
x = "Année",
y = "Pourcentage d'obèse dans la pop") +
theme_minimal()  # Style épuré
ggplot(Food_pattern, aes(x =Year, y = `Added sugars`)) +
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de sucre",
x = "Année",
y = "Consommation (gm)") +
theme_minimal()
ggplot(Food_pattern, aes(x =Year, y = `Added fats and oils and dairy fats`)) +
geom_point(color = "black", size = 2) +  # Points noirs
labs(title = "Évolution de la consommation de gras, huile et produit laitiers",
x = "Année",
y = "Consommation (gm)") +
theme_minimal()
View(Food_pattern)
View(sucre)
View(Fastfood_2022)
View(Fastfood_2023)
View(food_mondialisation)
#SUCRE BIS
sugar_2<-read.csv("table-5-US-food-group-intakes-by-food-source.csv")
View(sugar_2)
ggplot(Overall, aes(x = Year, y = Data_value)) +
geom_line(color = "blue", size = 1) +   # Ligne bleue
geom_point(color = "red", size = 2) +   # Points rouges sur les années
labs(title = "Évolution du taux d'obésité",
x = "Année",
y = "Pourcentage d'obèse dans la pop") +
theme_minimal()  # Style épuré
View(sucre)
modèle <- lm(Overall$Data_value ~ sucre$Value)
modèle <- lm(Overall$Data_value ~ sucre$Value)
123<-sucre %>% filter(Year == "2011","2012","2013")
bis<-sucre %>% filter(Year == "2011","2012","2013")
Obésité<-read.csv("2023-Obesity-by-demographic.csv")
